{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Admin username"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Admin password"
            }
        },
        "authenticationType": {
            "defaultValue": "password",
            "allowedValues": [
                "password",
                "sshPublicKey"
            ],
            "type": "String",
            "metadata": {
                "description": "Authentication type"
            }
        },
        "storageAccountName": {
            "defaultValue": "checkpoint",
            "type": "String",
            "metadata": {
                "description": "Name of storage account"
            }
        },
        "sshPublicKey": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Administrator SSH public key"
            }
        },
        "clusterName": {
            "type": "String",
            "defaultValue": "chkpcluster01",
            "metadata": {
                "description": "Name of the Check Point Cluster"
            }
        },
        "vmSize": {
            "defaultValue": "Standard_D3",
            "type": "String",
            "allowedValues" : [
                "Standard_D3",
                "Standard_D4",
                "Standard_D11",
                "Standard_D12",
                "Standard_D13",
                "Standard_D14",
                "Standard_D3_v2",
                "Standard_D4_v2",
                "Standard_D5_v2",
                "Standard_D11_v2",
                "Standard_D12_v2",
                "Standard_D13_v2",
                "Standard_D14_v2",
                "Standard_DS3",
                "Standard_DS4",
                "Standard_DS11",
                "Standard_DS12",
                "Standard_DS13",
                "Standard_DS14"
            ],
            "metadata": {
                "description": "Size of the VM"
            }
        },
        "sicKey": {
            "type": "SecureString",
            "defaultValue": "Cp@azure2017",
            "metadata": {
                "description": "One time key for Secure Internal Communication"
            }
        },
        "virtualNetworkName": {
            "defaultValue": "bscvnet",
            "type": "String",
            "metadata": {
                "description": "The name of the virtual network"
            }
        },
        "virtualNetworkAddressPrefix": {
            "defaultValue": "192.168.0.0/16",
            "type": "String",
            "metadata": {
                "description": "The address prefix of the virtual network"
            }
        },
        "Subnet1Name": {
            "defaultValue": "vnet1",
            "type": "String",
            "metadata": {
                "description": "The name of the 1st subnet"
            }
        },
        "Subnet1Prefix": {
            "defaultValue": "192.168.1.0/24",
            "type": "String",
            "metadata": {
                "description": "The address prefix of the 1st subnet"
            }
        },
        "Subnet1StartAddress": {
            "defaultValue": "192.168.1.10",
            "type": "String",
            "metadata": {
                "description": "The first avaialable address on the 1st subnet"
            }
        },
        "Subnet2Name": {
            "defaultValue": "vnet2",
            "type": "String",
            "metadata": {
                "description": "The name of the 2nd subnet"
            }
        },
        "Subnet2Prefix": {
            "defaultValue": "192.168.2.0/24",
            "type": "String",
            "metadata": {
                "description": "The address prefix of the 2nd subnet"
            }
        },
        "Subnet2StartAddress": {
            "defaultValue": "192.168.2.10",
            "type": "String",
            "metadata": {
                "description": "The first avaialable address on the 2nd subnet"
            }
        },
        "Check_PointTags": {
          "type": "object",
          "defaultValue": {
            "provider": "30DE18BC-F9F6-4F22-9D30-54B8E74CFD5F"
          }
        }
    },
    "variables": {
        "computeApiVersion": "2016-03-30",
        "storageApiVersion": "2016-01-01",
        "networkApiVersion": "2016-06-01",
        "deploymentsApiVersion": "2016-02-01",
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
        "imageVHDURI": "https://checkpoint.blob.core.chinacloudapi.cn/vhds/Check-Point-Security-Gateway-BYOL-R77.30-036.148.vhd",
        "baseUrl": "https://armresstorage.blob.core.chinacloudapi.cn/test",
        "authenticationType": "password",
        "storageAccountType": "Standard_LRS",
        "storageAccountNewOrExisting": "existing",
        "storageAccountNameexisting": "[parameters('storageAccountName')]",
        "storageAccountNamenew": "[trim(substring(concat(parameters('storageAccountName'), uniqueString(resourceGroup().id, deployment().name), '                        '), 0, 24))]",
        "storageAccountName": "[variables(concat('storageAccountName', variables('storageAccountNewOrExisting')))]",
        "storageAccountUri": "[concat('http://', variables('storageAccountName'), '.blob.core.chinacloudapi.cn')]",
        "storageAccountSetupURL": "[concat(variables('baseUrl'),'/storageAccount-', variables('storageAccountNewOrExisting'), '.json')]",
        "customData": "[concat('#!/bin/bash\n', '\n', 'subscriptionId=\"', subscription().subscriptionId, '\"', '\n', 'tenantId=\"', subscription().tenantId, '\"', '\n', 'resourceGroup=\"', resourceGroup().name, '\"', '\n', 'virtualNetwork=\"', parameters('virtualNetworkName'), '\"', '\n', 'clusterName=\"', parameters('clusterName'), '\"', '\n', 'lbName=\"', variables('lbName'), '\"', '\n', '\n', '\n', 'cat <<EOF >\"$FWDIR/conf/azure-ha.json\"\n', '{\n', '  \"debug\": false,\n', '  \"subscriptionId\": \"$subscriptionId\",\n', '  \"resourceGroup\": \"$resourceGroup\",\n', '  \"credentials\": {\n', '    \"tenant\": \"$tenantId\",\n', '    \"grant_type\": \"client_credentials\",\n', '    \"client_id\": \"\",\n', '    \"client_secret\": \"\"\n', '  },\n', '  \"proxy\": \"\",\n', '  \"virtualNetwork\": \"$virtualNetwork\",\n', '  \"clusterName\": \"$clusterName\",\n', '  \"lbName\": \"$lbName\"\n', '}\n', 'EOF\n', '\n', 'sicKey=\"', parameters('sicKey'), '\"', '\n', 'conf=\"install_security_gw=true\"\n', 'conf=\"${conf}&install_ppak=true\"\n', 'conf=\"${conf}&gateway_cluster_member=true\"\n', 'conf=\"${conf}&install_security_managment=false\"\n', 'conf=\"${conf}&ftw_sic_key=$sicKey\"\n', '\n', 'config_system -s \"$conf\"\n', 'shutdown -r now\n')]",
        "lbId": "[resourceId('Microsoft.Network/loadBalancers', variables('lbName'))]",
        "lbName": "frontend-lb",
        "nic1Name": "external",
        "nic2Name": "int0",
        "linuxConfigurationpassword": {},
        "linuxConfigurationsshPublicKey": {
            "disablePasswordAuthentication": "true",
            "ssh": {
                "publicKeys": [
                    {
                        "keyData": "[parameters('sshPublicKey')]",
                        "path": "/home/notused/.ssh/authorized_keys"
                    }
                ]
            }
        },
        "linuxConfiguration": "[variables(concat('linuxConfiguration',parameters('authenticationType')))]",
        "externalPrivateAddresses": [
            "[parameters('Subnet1StartAddress')]",
            "[concat(split(parameters('Subnet1StartAddress'), '.')[0],'.', split(parameters('Subnet1StartAddress'), '.')[1],'.', split(parameters('Subnet1StartAddress'), '.')[2],'.', string(add(int(split(parameters('Subnet1StartAddress'), '.')[3]),1)))]"
        ],
        "subnet2PrivateAddresses": [
            "[parameters('Subnet2StartAddress')]",
            "[concat(split(parameters('Subnet2StartAddress'), '.')[0],'.', split(parameters('Subnet2StartAddress'), '.')[1],'.', split(parameters('Subnet2StartAddress'), '.')[2],'.', string(add(int(split(parameters('Subnet2StartAddress'), '.')[3]),1)))]"
        ],
        "publicIPAddressName": "[parameters('clusterName')]",
        "publicIPAddressId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
        "publicIPAddressName1": "[concat(parameters('clusterName'), 1)]",
        "publicIPAddressId1": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName1'))]",
        "publicIPAddressName2": "[concat(parameters('clusterName'), 2)]",
        "publicIPAddressId2": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName2'))]",
        "availabilitySetName": "[concat(parameters('clusterName'), '-AvailabilitySet')]",
        "count": 2,
        "frontEndIPConfMember1Id": "[concat(variables('lbId'), '/frontendIPConfigurations/LoadBalancerFrontEnd1')]",
        "frontEndIPConfMember2Id": "[concat(variables('lbId'), '/frontendIPConfigurations/LoadBalancerFrontEnd2')]",
        "member1IPConfigId": "[concat(variables('lbId'), '/frontendIPConfigurations/LoadBalancerFrontEnd1')]",
        "member2IPConfigId": "[concat(variables('lbId'), '/frontendIPConfigurations/LoadBalancerFrontEnd2')]"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "name": "storageAccountSetup",
            "apiVersion": "[variables('deploymentsApiVersion')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('storageAccountSetupURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[resourceGroup().location]"
                    },
                    "storageAccountType": {
                        "value": "[variables('storageAccountType')]"
                    },
                    "storageAccountName": {
                        "value": "[variables('storageAccountName')]"
                    },
                    "apiVersion": {
                        "value": "[variables('storageApiVersion')]"
                    }
                }
            }
        }, 
        {
          "type": "Microsoft.Network/routeTables",
          "apiVersion": "[variables('networkApiVersion')]",
          "location": "[resourceGroup().location]",
          "name": "[parameters('subnet1Name')]",
          "properties": {
            "routes": [
              {
                "name": "Local-Subnet",
                "properties": {
                  "addressPrefix": "[parameters('subnet1Prefix')]",
                  "nextHopType": "VnetLocal"
                }
              },
              {
                "name": "To-Internal",
                "properties": {
                  "addressPrefix": "[parameters('virtualNetworkAddressPrefix')]",
                  "nextHopType": "VirtualAppliance",
                  "nextHopIpAddress": "[parameters('subnet1StartAddress')]"
                }
              },
              {
                "name": "To-Internet",
                "properties": {
                  "addressPrefix": "0.0.0.0/0",
                  "nextHopType": "VirtualAppliance",
                  "nextHopIpAddress": "[parameters('subnet1StartAddress')]"
                }
              }
            ]
          },
          "tags": {
            "provider": "[toUpper(parameters('Check_PointTags').provider)]"
          }
        },
        {
          "type": "Microsoft.Network/routeTables",
          "apiVersion": "[variables('networkApiVersion')]",
          "location": "[resourceGroup().location]",
          "name": "[parameters('subnet2Name')]",
          "properties": {
            "routes": [
              {
                "name": "Local-Subnet",
                "properties": {
                  "addressPrefix": "[parameters('subnet2Prefix')]",
                  "nextHopType": "VnetLocal"
                }
              },
              {
                "name": "Inside-Vnet",
                "properties": {
                  "addressPrefix": "[parameters('virtualNetworkAddressPrefix')]",
                  "nextHopType": "VirtualAppliance",
                  "nextHopIpAddress": "[parameters('subnet2StartAddress')]"
                }
              },
              {
                "name": "To-Internet",
                "properties": {
                  "addressPrefix": "0.0.0.0/0",
                  "nextHopType": "VirtualAppliance",
                  "nextHopIpAddress": "[parameters('subnet2StartAddress')]"
                }
              }
            ]
          },
          "tags": {
            "provider": "[toUpper(parameters('Check_PointTags').provider)]"
          }
        },
        {
          "type": "Microsoft.Network/virtualNetworks",
          "apiVersion": "[variables('networkApiVersion')]",
          "location": "[resourceGroup().location]",
          "name": "[parameters('virtualNetworkName')]",
          "dependsOn": [
            "[resourceId('Microsoft.Network/routeTables', parameters('subnet1Name'))]",
            "[resourceId('Microsoft.Network/routeTables', parameters('subnet2Name'))]"
          ],
          "properties": {
            "addressSpace": {
              "addressPrefixes": [
                "[parameters('virtualNetworkAddressPrefix')]"
              ]
            },
            "subnets": [
              {
                "name": "[parameters('subnet1Name')]",
                "properties": {
                  "addressPrefix": "[parameters('subnet1Prefix')]",
                  "routeTable": {
                    "id": "[resourceId('Microsoft.Network/routeTables', parameters('subnet1Name'))]"
                  }
                }
              },
              {
                "name": "[parameters('subnet2Name')]",
                "properties": {
                  "addressPrefix": "[parameters('subnet2Prefix')]",
                  "routeTable": {
                    "id": "[resourceId('Microsoft.Network/routeTables', parameters('subnet2Name'))]"
                  }
                }
              }
            ]
          },
          "tags": {
            "provider": "[toUpper(parameters('Check_PointTags').provider)]"
          }
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('availabilitySetName')]",
            "apiVersion": "[variables('computeApiVersion')]",
            "location": "[resourceGroup().location]"
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "idleTimeoutInMinutes": 30,
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                    "domainNameLabel": "[concat(toLower(parameters('clusterName')), '-', uniquestring(resourceGroup().id, deployment().name))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(parameters('clusterName'), copyIndex(1))]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "publicAddressCopy",
                "count": "[variables('count')]"
            },
            "properties": {
                "idleTimeoutInMinutes": 30,
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                    "domainNameLabel": "[concat(toLower(parameters('clusterName')), '-', copyIndex(1), '-', uniquestring(resourceGroup().id, deployment().name))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "name": "[variables('lbName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[concat('LoadBalancerFrontEnd', 1)]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[variables(concat('publicIPAddressId', 1))]"
                            }
                        }
                    },
                    {
                        "name": "[concat('LoadBalancerFrontEnd', 2)]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[variables(concat('publicIPAddressId', 2))]"
                            }
                        }
                    }
                ],
                "inboundNatRules": [
                    {
                        "name": "checkpoint-SSH1",
                        "properties": {
                            "backendPort": 22,
                            "frontendIPConfiguration": {
                                "id": "[variables('member1IPConfigId')]"
                            },
                            "frontendPort": 22,
                            "protocol": "tcp"
                        }
                    },
                    {
                        "name": "checkpoint-SSH2",
                        "properties": {
                            "backendPort": 22,
                            "frontendIPConfiguration": {
                                "id": "[variables('member2IPConfigId')]"
                            },
                            "frontendPort": 22,
                            "protocol": "tcp"
                        }
                    },
                    {
                        "name": "checkpoint-WEBUI1",
                        "properties": {
                            "backendPort": 443,
                            "frontendIPConfiguration": {
                                "id": "[variables('member1IPConfigId')]"
                            },
                            "frontendPort": 443,
                            "protocol": "tcp"
                        }
                    },
                    {
                        "name": "checkpoint-WEBUI2",
                        "properties": {
                            "backendPort": 443,
                            "frontendIPConfiguration": {
                                "id": "[variables('member2IPConfigId')]"
                            },
                            "frontendPort": 443,
                            "protocol": "tcp"
                        }
                    },
                    {
                        "name": "checkpoint-FWD1",
                        "properties": {
                            "backendPort": 256,
                            "frontendIPConfiguration": {
                                "id": "[variables('member1IPConfigId')]"
                            },
                            "frontendPort": 256,
                            "protocol": "tcp"
                        }
                    },
                    {
                        "name": "checkpoint-FWD2",
                        "properties": {
                            "backendPort": 256,
                            "frontendIPConfiguration": {
                                "id": "[variables('member2IPConfigId')]"
                            },
                            "frontendPort": 256,
                            "protocol": "tcp"
                        }
                    },
                    {
                        "name": "checkpoint-CPD1",
                        "properties": {
                            "backendPort": 18191,
                            "frontendIPConfiguration": {
                                "id": "[variables('member1IPConfigId')]"
                            },
                            "frontendPort": 18191,
                            "protocol": "tcp"
                        }
                    },
                    {
                        "name": "checkpoint-CPD2",
                        "properties": {
                            "backendPort": 18191,
                            "frontendIPConfiguration": {
                                "id": "[variables('member2IPConfigId')]"
                            },
                            "frontendPort": 18191,
                            "protocol": "tcp"
                        }
                    },
                    {
                        "name": "checkpoint-AMON1",
                        "properties": {
                            "backendPort": 18192,
                            "frontendIPConfiguration": {
                                "id": "[variables('member1IPConfigId')]"
                            },
                            "frontendPort": 18192,
                            "protocol": "tcp"
                        }
                    },
                    {
                        "name": "checkpoint-AMON2",
                        "properties": {
                            "backendPort": 18192,
                            "frontendIPConfiguration": {
                                "id": "[variables('member2IPConfigId')]"
                            },
                            "frontendPort": 18192,
                            "protocol": "tcp"
                        }
                    },
                    {
                        "name": "checkpoint-CPRID1",
                        "properties": {
                            "backendPort": 18208,
                            "frontendIPConfiguration": {
                                "id": "[variables('member1IPConfigId')]"
                            },
                            "frontendPort": 18208,
                            "protocol": "tcp"
                        }
                    },
                    {
                        "name": "checkpoint-CPRID2",
                        "properties": {
                            "backendPort": 18208,
                            "frontendIPConfiguration": {
                                "id": "[variables('member2IPConfigId')]"
                            },
                            "frontendPort": 18208,
                            "protocol": "tcp"
                        }
                    },
                    {
                        "name": "checkpoint-ICAPUSH1",
                        "properties": {
                            "backendPort": 18211,
                            "frontendIPConfiguration": {
                                "id": "[variables('member1IPConfigId')]"
                            },
                            "frontendPort": 18211,
                            "protocol": "tcp"
                        }
                    },
                    {
                        "name": "checkpoint-ICAPUSH2",
                        "properties": {
                            "backendPort": 18211,
                            "frontendIPConfiguration": {
                                "id": "[variables('member2IPConfigId')]"
                            },
                            "frontendPort": 18211,
                            "protocol": "tcp"
                        }
                    }
                ]
            },
            "dependsOn": [
                "publicAddressCopy"
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('clusterName'), '1-', variables('nic1Name'))]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "enableIPForwarding": true,
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "[variables('externalPrivateAddresses')[0]]",
                            "privateIPAllocationMethod": "Static",
                            "PublicIpAddress": {
                                "Id": "[variables('publicIPAddressId')]"
                            },
                            "subnet": {
                                "id": "[concat(variables('vnetId'), '/subnets/', parameters('subnet1Name'))]"
                            },
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[concat(variables('lbId'), '/inboundNatRules/checkpoint-SSH1')]"
                                },
                                {
                                    "id": "[concat(variables('lbId'), '/inboundNatRules/checkpoint-WEBUI1')]"
                                },
                                {
                                    "id": "[concat(variables('lbId'), '/inboundNatRules/checkpoint-FWD1')]"
                                },
                                {
                                    "id": "[concat(variables('lbId'), '/inboundNatRules/checkpoint-CPD1')]"
                                },
                                {
                                    "id": "[concat(variables('lbId'), '/inboundNatRules/checkpoint-AMON1')]"
                                },
                                {
                                    "id": "[concat(variables('lbId'), '/inboundNatRules/checkpoint-CPRID1')]"
                                },
                                {
                                    "id": "[concat(variables('lbId'), '/inboundNatRules/checkpoint-ICAPUSH1')]"
                                }
                            ]
                        }
                    }
                ]
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
                "[variables('lbId')]",
                "[variables('publicIPAddressId')]"
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('clusterName'), '2-', variables('nic1Name'))]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "enableIPForwarding": true,
                "ipConfigurations": [
                    {
                        "name": "ipconfig2",
                        "properties": {
                            "privateIPAddress": "[variables('externalPrivateAddresses')[1]]",
                            "privateIPAllocationMethod": "Static",
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[concat(variables('lbId'), '/inboundNatRules/checkpoint-SSH2')]"
                                },
                                {
                                    "id": "[concat(variables('lbId'), '/inboundNatRules/checkpoint-WEBUI2')]"
                                },
                                {
                                    "id": "[concat(variables('lbId'), '/inboundNatRules/checkpoint-FWD2')]"
                                },
                                {
                                    "id": "[concat(variables('lbId'), '/inboundNatRules/checkpoint-CPD2')]"
                                },
                                {
                                    "id": "[concat(variables('lbId'), '/inboundNatRules/checkpoint-AMON2')]"
                                },
                                {
                                    "id": "[concat(variables('lbId'), '/inboundNatRules/checkpoint-CPRID2')]"
                                },
                                {
                                    "id": "[concat(variables('lbId'), '/inboundNatRules/checkpoint-ICAPUSH2')]"
                                }
                            ],
                            "subnet": {
                                "id": "[concat(variables('vnetId'), '/subnets/', parameters('subnet1Name'))]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
                "[variables('lbId')]"
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('clusterName'), copyIndex(1), '-', variables('nic2Name'))]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "interface2Copy",
                "count": "[variables('count')]"
            },
            "properties": {
                "enableIPForwarding": true,
                "ipConfigurations": [
                    {
                        "name": "ipconfig2",
                        "properties": {
                            "privateIPAddress": "[variables('subnet2PrivateAddresses')[copyIndex(0)]]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[concat(variables('vnetId'), '/subnets/', parameters('subnet2Name'))]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('clusterName'), copyIndex(1))]",
            "apiVersion": "[variables('computeApiVersion')]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "virtualMachineCopy",
                "count": "[variables('count')]"
            },
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "true",
                        "storageUri": "[variables('storageAccountUri')]"
                    }
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('clusterName'), copyIndex(1), '-', variables('nic1Name')))]",
                            "properties": {
                                "primary": true
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('clusterName'), copyIndex(1), '-', variables('nic2Name')))]",
                            "properties": {
                                "primary": false
                            }
                        }
                    ]
                },
                "osProfile": {
                    "adminPassword": "[parameters('adminPassword')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "computername": "[concat(toLower(parameters('clusterName')), copyIndex(1))]",
                    "customData": "[base64(variables('customData'))]",
                    "linuxConfiguration": "[variables('linuxConfiguration')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "image": {
                            "uri": "[variables('imageVHDURI')]"
                        },
                        "osType": "Linux",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "name": "osDisk",
                        "vhd": {
                            "uri": "[concat(variables('storageAccountUri'), '/', toLower(parameters('clusterName')), '-', uniqueString(resourceGroup().id, deployment().name), '/osDisk', copyIndex(1), '.vhd')]"
                        }
                    }
                }
            },
            "dependsOn": [
                "storageAccountSetup",
                "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', parameters('clusterName'), copyIndex(1), '-', variables('nic1Name'))]",
                "[concat('Microsoft.Network/networkInterfaces/', parameters('clusterName'), copyIndex(1), '-', variables('nic2Name'))]"
            ]
        }
    ],
    "outputs": {
        "ClusterIPAddr": {
            "type": "String",
            "value": "[reference(variables('publicIPAddressId')).IpAddress]"
        },
        "ClusterFQDN": {
            "type": "String",
            "value": "[reference(variables('publicIPAddressId')).dnsSettings.fqdn]"
        },
        "Member1IPAddr": {
            "type": "String",
            "value": "[reference(variables('publicIPAddressId1')).IpAddress]"
        },
        "Member1FQDN": {
            "type": "String",
            "value": "[reference(variables('publicIPAddressId1')).dnsSettings.fqdn]"
        },
        "Member2IPAddr": {
            "type": "String",
            "value": "[reference(variables('publicIPAddressId2')).IpAddress]"
        },
        "Member2FQDN": {
            "type": "String",
            "value": "[reference(variables('publicIPAddressId2')).dnsSettings.fqdn]"
        }
    }
}