{

  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",

  "contentVersion": "1.0.0.0",

  "parameters": {

    "storageAccountName": {

      "type": "string",

      "metadata": {

        "description": "Name of storage account"

      }

    },

    "adminUsername": {

      "type": "string",

      "metadata": {

        "description": "Admin username"

      }

    },

    "adminPassword": {

      "type": "securestring",

      "metadata": {

        "description": "Admin password"

      }

    },

    "dnsNameforLBIP": {

      "type": "string",

      "metadata": {

        "description": "DNS for Load Balancer IP"

      }

    },

    "vmNamePrefix": {

      "type": "string",

      "defaultValue": "myVM",

      "metadata": {

        "description": "Prefix to use for VM names"

      }

    },

    "imagePublisher": {

      "type": "string",

      "defaultValue": "Canonical",

      "metadata": {

        "description": "Image Publisher"

      }

    },

    "imageOffer": {

      "type": "string",

      "defaultValue": "UbuntuServer",

      "metadata": {

        "description": "Image Offer"

      }

    },

    "ubuntuOSVersion":{
      "type": "string",
      "defaultValue": "14.04.2-LTS",
      "metadata": {
           "description": "The?Ubuntu?version?for?the?VM.?This?will?pick?a?fully?patched?image?of?this?given?Ubuntu?version."
        }

    },



    "lbName": {

      "type": "string",

      "defaultValue": "myLB",

      "metadata": {

        "description": "Load Balancer name"

      }

    },

    "nicNamePrefix": {

      "type": "string",

      "defaultValue": "nic",

      "metadata": {

        "description": "Network Interface name prefix"

      }

    },

    "publicIPAddressName": {

      "type": "string",

      "defaultValue": "myPublicIP",

      "metadata": {

        "description": "Public IP Name"

      }

    },

    "vnetName": {

      "type": "string",

      "defaultValue": "myVNET",

      "metadata": {

        "description": "VNET name"

      }

    },

    "vmSize": {

      "type": "string",

      "defaultValue": "Standard_D1",

      "metadata": {

        "description": "Size of the VM"

      }

    }

  },

  "variables": {

    "storageAccountType": "Standard_LRS",

    "availabilitySetName": "myAvSet",

    "addressPrefix": "10.0.0.0/16",

    "subnetName": "Subnet-1",

    "subnetPrefix": "10.0.0.0/24",

    "publicIPAddressType": "Dynamic",

    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('vnetName'))]",

    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables ('subnetName'))]",

    "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIPAddressName'))]",

    "numberOfInstances": 2,

    "lbID": "[resourceId('Microsoft.Network/loadBalancers',parameters('lbName'))]",

    "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/LoadBalancerFrontEnd')]",

    "lbPoolID": "[concat(variables('lbID'),'/backendAddressPools/BackendPool1')]",

    "lbProbeID": "[concat(variables('lbID'),'/probes/tcpProbe')]",
    "installScriptName": "install-dbcluster",
    "fileUriBase": "https://raw.githubusercontent.com/v-wjia/azurearmtest/master/",
    "installScriptUri": "[concat(variables('fileUriBase'), variables('installScriptName'))]",    
    "installCommand": "[concat('sh ', variables('installScriptName'))]",
    "apiVersion": "2015-06-15"

  },

  "resources": [

    {

      "type": "Microsoft.Storage/storageAccounts",

      "name": "[parameters('storageAccountName')]",

      "apiVersion": "[variables('apiVersion')]",

      "location": "[resourceGroup().location]",

      "properties": {

        "accountType": "[variables('storageAccountType')]"

      }

    },

    {

      "type": "Microsoft.Compute/availabilitySets",

      "name": "[variables('availabilitySetName')]",

      "apiVersion": "[variables('apiVersion')]",

      "location": "[resourceGroup().location]",

      "properties": {}

    },
    
    {

      "apiVersion": "[variables('apiVersion')]",

      "type": "Microsoft.Network/publicIPAddresses",

      "name": "[parameters('publicIPAddressName')]",

      "location": "[resourceGroup().location]",

      "properties": {

        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",

        "dnsSettings": {

          "domainNameLabel": "[parameters('dnsNameforLBIP')]"

        }

      }

    },

    {

      "apiVersion": "[variables('apiVersion')]",

      "type": "Microsoft.Network/virtualNetworks",

      "name": "[parameters('vnetName')]",

      "location": "[resourceGroup().location]",

      "properties": {

        "addressSpace": {

          "addressPrefixes": [

            "[variables('addressPrefix')]"

          ]

        },

        "subnets": [

          {

            "name": "[variables('subnetName')]",

            "properties": {

              "addressPrefix": "[variables('subnetPrefix')]"

            }

          }

        ]

      }

    },

    {

      "apiVersion": "[variables('apiVersion')]",

      "type": "Microsoft.Network/networkInterfaces",

      "name": "[concat(parameters('nicNamePrefix'), copyindex())]",

      "location": "[resourceGroup().location]",

      "copy": {

        "name": "nicLoop",

        "count": "[variables('numberOfInstances')]"

      },

      "dependsOn": [

        "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]",

        "[concat('Microsoft.Network/loadBalancers/', parameters('lbName'))]"

      ],

      "properties": {

        "ipConfigurations": [

          {

            "name": "ipconfig1",

            "properties": {

              "privateIPAllocationMethod": "Dynamic",

              "subnet": {

                "id": "[variables('subnetRef')]"

              },

              "loadBalancerBackendAddressPools": [

                {

                  "id": "[concat(variables('lbID'), '/backendAddressPools/BackendPool1')]"

                }

              ],

              "loadBalancerInboundNatRules": [

                {

                  "id": "[concat(variables('lbID'),'/inboundNatRules/RDP-VM', copyindex())]"

                }

              ]

            }

          }

        ]

      }

    },

    {

      "apiVersion": "[variables('apiVersion')]",

      "name": "[parameters('lbName')]",

      "type": "Microsoft.Network/loadBalancers",

      "location": "[resourceGroup().location]",

      "dependsOn": [

        "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]"

      ],

      "properties": {

        "frontendIPConfigurations": [

          {

            "name": "LoadBalancerFrontEnd",

            "properties": {

              "publicIPAddress": {

                "id": "[variables('publicIPAddressID')]"

              }

            }

          }

        ],

        "backendAddressPools": [

          {

            "name": "BackendPool1"

          }

        ],

        "inboundNatRules": [

          {

            "name": "RDP-VM0",

            "properties": {

              "frontendIPConfiguration": {

                "id": "[variables('frontEndIPConfigID')]"

              },

              "protocol": "tcp",

              "frontendPort": 50001,

              "backendPort": 3389,

              "enableFloatingIP": false

            }

          },

          {

            "name": "RDP-VM1",

            "properties": {

              "frontendIPConfiguration": {

                "id": "[variables('frontEndIPConfigID')]"

              },

              "protocol": "tcp",

              "frontendPort": 50002,

              "backendPort": 3389,

              "enableFloatingIP": false

            }

          }

        ],

        "loadBalancingRules": [

          {

            "name": "LBRule",

            "properties": {

              "frontendIPConfiguration": {

                "id": "[variables('frontEndIPConfigID')]"

              },

              "backendAddressPool": {

                "id": "[variables('lbPoolID')]"

              },

              "protocol": "tcp",

              "frontendPort": 80,

              "backendPort": 80,

              "enableFloatingIP": false,

              "idleTimeoutInMinutes": 5,

              "probe": {

                "id": "[variables('lbProbeID')]"

              }

            }

          }

        ],

        "probes": [

          {

            "name": "tcpProbe",

            "properties": {

              "protocol": "tcp",

              "port": 80,

              "intervalInSeconds": 5,

              "numberOfProbes": 2

            }

          }

        ]

      }

    },

    {

      "apiVersion": "[variables('apiVersion')]",

      "type": "Microsoft.Compute/virtualMachines",

      "name": "[concat(parameters('vmNamePrefix'), copyindex())]",

      "copy": {

        "name": "virtualMachineLoop",

        "count": "[variables('numberOfInstances')]"

      },

      "location": "[resourceGroup().location]",

      "dependsOn": [

        "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",

        "[concat('Microsoft.Network/networkInterfaces/', parameters('nicNamePrefix'), copyindex())]",

        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"

      ],

      "properties": {

        "availabilitySet": {

          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"

        },

        "hardwareProfile": {

          "vmSize": "[parameters('vmSize')]"

        },

        "osProfile": {

          "computerName": "[concat(parameters('vmNamePrefix'), copyIndex())]",

          "adminUsername": "[parameters('adminUsername')]",

          "adminPassword": "[parameters('adminPassword')]"

        },

        "storageProfile": {

          "imageReference": {

            "publisher": "[parameters('imagePublisher')]",

            "offer": "[parameters('imageOffer')]",

            "sku": "[parameters('ubuntuOSVersion')]",

            "version": "latest"

          },

          "osDisk": {

            "name": "osdisk",

            "vhd": {

              "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.chinacloudapi.cn/vhds/','osdisk', copyindex(), '.vhd')]"

            },

            "caching": "ReadWrite",

            "createOption": "FromImage"

          }

        },

        "networkProfile": {

          "networkInterfaces": [

            {

              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('nicNamePrefix'),copyindex()))]"

            }

          ]

        },

        "diagnosticsProfile": {

          "bootDiagnostics": {

             "enabled": "true",

             "storageUri": "[concat('http://',parameters('storageAccountName'),'.blob.core.chinacloudapi.cn')]"

          }
        }  
      }
    },
    
    {

      "type": "Microsoft.Compute/virtualMachines/extensions",

      "name": "[concat(concat(parameters('vmNamePrefix'),copyIndex()),'/newuserscript')]",

      "apiVersion": "[variables('apiVersion')]",

      "location": "[resourceGroup().location]",

      "dependsOn": [

        "[concat('Microsoft.Compute/virtualMachines/',concat(parameters('vmNamePrefix'),copyIndex()))]"

      ],

      "properties": {

        "publisher": "Microsoft.OSTCExtensions",

        "type": "CustomScriptForLinux",

        "typeHandlerVersion": "1.4",

        "autoUpgradeMinorVersion": true,

        "settings": {

          "fileUris": [

            "[concat(variables('installScriptUri'), copyIndex(), '.sh')]"
          ]

        },

        "protectedSettings": {

          "commandToExecute": "[concat(variables('installCommand'), copyIndex(), '.sh')]"

        }

      },

      "copy": {

        "name": "extensionsCopy",

        "count": "[variables('numberOfInstances')]"

      }

    }
    
    
  ]

}