{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "libhaproxymysqlvnet",
      "metadata": {
        "description": "This is the name of the Virtual Network"
      }
    },
    "ilbnetworkInterfaceName": {
      "type": "string",
      "defaultValue": "libhaproxynic",
      "metadata": {
        "description": "This is the prefix name of the ilb with haProxy Network interfaces"
      }
    },
    "mysqlnetworkInterfaceName": {
      "type": "string",
      "defaultValue": "mysqlnic",
      "metadata": {
        "description": "This is the prefix name of the mysql Network interfaces"
      }
    },	
    "loadBalancerName": {
      "type": "string",
      "defaultValue": "libhaproxymysqllb",
      "metadata": {
        "description": "This is the name of the load balancer"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password"
      }
    },
    "haProxyVMPrefix": {
      "type": "string",
      "defaultValue": "HaproxyVM",
      "metadata": {
        "description": "Prefix to use for Haproxy VM names"
      }
    },
    "mysqlVMPrefix": {
      "type": "string",
      "defaultValue": "MysqlVM",
      "metadata": {
        "description": "Prefix to use for Mysql VM names"
      }
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "OpenLogic",
      "metadata": {
        "description": "Image Publisher"
      }
    },	
    "imageOffer": {
      "type": "string",
      "defaultValue": "CentOS",
      "metadata": {
        "description": "Image Offer"
      }
    },
    "imageSKU": {
      "type": "string",
      "defaultValue": "6.7",
      "metadata": {
        "description": "Image SKU"
      }
    },
    "vmStorageAccountContainerName": {
      "type": "string",
      "defaultValue": "vhds",
      "metadata": {
        "description": "This is the storage account container name"
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Storage account name"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D1",
      "metadata": {
        "description": "This is the allowed list of VM sizes"
      }
    }
  },
  "variables": {
    "apiVersion" : "2015-06-15",
    "availabilitySetName": "AvSet",
    "storageAccountType": "Standard_LRS",
	"vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
	
    "haProxysubnetName": "haproxybackendSubnet",
    "haProxysubnetRef": "[concat(variables('vnetID'),'/subnets/',variables ('haProxysubnetName'))]",
    "mysqlsubnetName": "mysqlbackendSubnet",
    "mysqlubnetRef": "[concat(variables('vnetID'),'/subnets/',variables ('mysqlsubnetName'))]",	
	"addressPrefix": "10.0.0.0/16",
	"haProxysubnetSLBPrefix": "10.0.3.0/24",
	"mysqlsubnetSLBPrefix": "10.0.4.0/24",
	
    "numberOfInstancesOfHaproxy": 2,
	"numberOfInstancesOfMysql": 2,
	
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',parameters('loadBalancerName'))]",
	"lbPublicIPAddress" : "10.0.3.6",
	
    "fileUriBase": "https://armresstorage.blob.core.chinacloudapi.cn/script/",
    "haproxyInstallName":"install-nginx",
    "mysqlInstallName":"install-web",
    "haproxyInstallScriptPrefix": "[concat(variables('fileUriBase'), variables('haproxyInstallName'))]", 
    "mysqlInstallScriptPrefix": "[concat(variables('fileUriBase'), variables('mysqlInstallName'))]"   
  },
    "resources": [
	{
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('storageAccountName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySetName')]",
      "location": "[resourceGroup().location]"
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('haProxysubnetName')]",
            "properties": {
              "addressPrefix": "[variables('haProxysubnetSLBPrefix')]"
            }
          },
          {
            "name": "[variables('mysqlsubnetName')]",
            "properties": {
              "addressPrefix": "[variables('mysqlsubnetSLBPrefix')]"
            }
          }		  
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('ilbnetworkInterfaceName'), copyindex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoop",
        "count": "[variables('numberOfInstancesOfHaproxy')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
        "[concat('Microsoft.Network/loadBalancers/', parameters('loadBalancerName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('haProxysubnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('lbID'), '/backendAddressPools/BackendPool1')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('mysqlnetworkInterfaceName'), copyindex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoop",
        "count": "[variables('numberOfInstancesOfMysql')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig2",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('mysqlubnetRef')]"
              }
            }
          }
        ]
      }
    },
	{
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/loadBalancers",
      "name": "[parameters('loadBalancerName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('vnetID')]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "properties": {
              "subnet": {
                "id": "[variables('haProxysubnetRef')]"
              },
              "privateIPAddress": "[variables('lbPublicIPAddress')]",
              "privateIPAllocationMethod": "Static"
            },
            "name": "LoadBalancerFrontend"
          }
        ],
        "backendAddressPools": [
          {
            "name": "BackendPool1"
          }
        ],
        "loadBalancingRules": [
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/frontendIpConfigurations/LoadBalancerFrontend')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/backendAddressPools/BackendPool1')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "idleTimeoutInMinutes": 15
            },
            "Name": "lbrule"
          }
        ],
        "probes": [
          {
            "properties": {
              "protocol": "Tcp",
              "port": 80,
              "intervalInSeconds": 15,
              "numberOfProbes": "[variables('numberOfInstancesOfHaproxy')]"
            },
            "name": "lbprobe"
          }
        ]
      }
    },
	{
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('haProxyVMPrefix'), copyindex())]",
            "copy": {
                "name": "virtualMachineLoop1",
                "count": "[variables('numberOfInstancesOfHaproxy')]"
            },
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', parameters('ilbnetworkInterfaceName'), copyindex())]",
                "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
            ],
            "tags": {
                "Role": "haproxy"
            },
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computername": "[concat(parameters('haProxyVMPrefix'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('imagePublisher')]",
                        "offer": "[parameters('imageOffer')]",
                        "sku": "[parameters('imageSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "haproxydisk",
                        "vhd": {
                            "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.chinacloudapi.cn/vhds/','haproxydisk', copyindex(), '.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('ilbnetworkInterfaceName'),copyindex()))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "true",
                        "storageUri": "[concat('http://',parameters('storageAccountName'),'.blob.core.chinacloudapi.cn')]"
                    }
                }
            },
            "resources": [
                {
                    "apiVersion": "[variables('apiVersion')]",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(parameters('haProxyVMPrefix'), copyIndex(),'/LinuxRMCustomScriptExtension')]",
                    "location": "[resourceGroup().location]",  
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/',parameters('haProxyVMPrefix'),copyIndex())]"
                    ],                   
                    "properties": {
                        "publisher": "Microsoft.OSTCExtensions",
                        "type": "CustomScriptForLinux",
                        "typeHandlerVersion": "1.4",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": [
                                "[concat(variables('haproxyInstallScriptPrefix'), '.sh')]"
                            ],
                            "commandToExecute": "[concat('sh ', variables('haproxyInstallName'), '.sh', ' ', variables('numberOfInstancesOfHaproxy'), ' ', '10.0.3.20')]"
                        }
                    }
                }
            ]
        },
	{
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('mysqlVMPrefix'), copyindex())]",
            "copy": {
                "name": "virtualMachineLoop2",
                "count": "[variables('numberOfInstancesOfMysql')]"
            },
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', parameters('mysqlnetworkInterfaceName'), copyindex())]"
            ],
            "tags": {
                "Role": "mysql"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computername": "[concat(parameters('mysqlVMPrefix'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('imagePublisher')]",
                        "offer": "[parameters('imageOffer')]",
                        "sku": "[parameters('imageSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "mysqldisk",
                        "vhd": {
                            "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.chinacloudapi.cn/vhds/','mysqldisk', copyindex(), '.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('mysqlnetworkInterfaceName'),copyindex()))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "true",
                        "storageUri": "[concat('http://',parameters('storageAccountName'),'.blob.core.chinacloudapi.cn')]"
                    }
                }
            },
            "resources": [
                {
                    "apiVersion": "[variables('apiVersion')]",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(parameters('mysqlVMPrefix'), copyIndex(),'/LinuxRMCustomScriptExtension')]",
                    "location": "[resourceGroup().location]",  
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/',parameters('mysqlVMPrefix'),copyIndex())]"
                    ],                   
                    "properties": {
                        "publisher": "Microsoft.OSTCExtensions",
                        "type": "CustomScriptForLinux",
                        "typeHandlerVersion": "1.4",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": [
                                "[concat(variables('mysqlInstallScriptPrefix'), '.sh')]"
                            ],
                            "commandToExecute": "[concat('sh ', variables('mysqlInstallName'), '.sh')]"
                        }
                    }
                }
            ]
        }		
	]
  }