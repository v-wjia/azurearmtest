{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Admin username"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Admin password"
            }
        },
        "dnsLabelPrefix": {
            "type": "string",
            "metadata": {
                "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
            }
        },
        "nginxVmNamePrefix": {
            "type": "string",
            "defaultValue": "nginxVM",
            "metadata": {
                "description": "Virtual machine name prefix for primary vm instances"
            }
        },
        "wechatVmNamePrefix": {
            "type": "string",
            "defaultValue": "wechatVM",
            "metadata": {
                "description": "Virtual machine name prefix for secondary vm instances"
            }
        },
        "h5VmNamePrefix": {
            "type": "string",
            "defaultValue": "h5VM",
            "metadata": {
                "description": "Virtual machine name prefix for third vm instances"
            }
        },
        "nginxOSUBTSKU": {
            "type": "string",
            "defaultValue": "6.7",
            "allowedValues": [
                "6.7"
            ],
            "metadata": {
                "description": "The CentOS version for the VM. This will pick a origented image of this given ubuntu version. Allowed values: 6.7."
            }
        },
        "wechatOSUBTSKU": {
            "type": "string",
            "defaultValue": "6.7",
            "allowedValues": [
                "6.7"
            ],
            "metadata": {
                "description": "The CentOS version for the VM. This will pick a origented image of this given ubuntu version. Allowed values: 6.7."
            }
        },
        "h5OSUBTSKU": {
            "type": "string",
            "defaultValue": "6.7",
            "allowedValues": [
                "6.7"
            ],
            "metadata": {
                "description": "The CentOS version for the VM. This will pick a origented image of this given ubuntu version. Allowed values: 6.7."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_A1",
            "allowedValues": [
                "Standard_A0",
                "Standard_A1",
                "Standard_A2",
                "Standard_A3",
                "Standard_A4"
            ],
            "metadata": {
                "description": "Virtual machine size"
            }
        }
    },
    "variables": {
        "storageAccountType": "Standard_LRS",
        "vmStorageAccountContainerName": "vhds",
        "availabilitySetName": "webCloudAvSet",
        "addressPrefix": "10.0.0.0/16",
        "subnetSLBName": "Subnet-1",
        "subnetSLBPrefix": "10.0.1.0/24",
        "subnetWeChatName": "Subnet-2",
        "subnetWeChatPrefix": "10.0.2.0/24",
        "subnetH5Name": "Subnet-3",
        "subnetH5Prefix": "10.0.5.0/24",
        "vnetName": "clusterCloudVNET",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetName'))]",
        "subnetSLBRef": "[concat(variables('vnetID'),'/subnets/',variables ('subnetSLBName'))]",
        "subnetWeChatRef": "[concat(variables('vnetID'),'/subnets/',variables ('subnetWeChatName'))]",
        "subnetH5Ref": "[concat(variables('vnetID'),'/subnets/',variables ('subnetH5Name'))]",
        "publicIPAddressType": "Dynamic",
        "outIPAddressType": "Dynamic",
        "publicIPAddressName": "webCloudPublicIP",
        "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
        "wechatOutIPAddressName": "wechatCloudOutIP",
        "wechatOutIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('wechatOutIPAddressName'))]",
        "h5OutIPAddressName": "h5CloudOutIP",
        "h5OutIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('h5OutIPAddressName'))]",
        "lbName": "webCloudLB",
        "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbName'))]",
        "numberOfNginxInstances": 2,
        "numberOfWeChatInstances": 2,
        "numberOfH5Instances": 2,
        "numberOfServerVmInstances": 4,
        "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/loadBalancerFrontend')]",
        "lbPoolID": "[concat(variables('lbID'),'/backendAddressPools/LoadBalancerBackend')]",
        "lbProbeID": "[concat(variables('lbID'),'/probes/tcpProbe')]",
        "newStorageAccountName": "[concat(uniquestring(resourceGroup().id),'storage')]",
        "apiVersion": "2015-06-15",
        "hostDNSNameScriptArgument": "[concat('*.',resourceGroup().location,'.cloudapp.azure.com')]",
        "nginxNicNamePrefix": "nicNginx",
        "wechatNicNamePrefix": "nicWechat",
        "h5NicNamePrefix": "nicH5",
        "imagePublisher": "OpenLogic",
        "imageOffer": "CentOS",
        "fileUriBase": "https://armresstorage.blob.core.chinacloudapi.cn/script/",
        "nginxInstallName": "install-nginx",
        "wechatInstallName": "install-wechat",
        "h5InstallName": "install-h5",
        "nginxInstallScriptPrefix": "[concat(variables('fileUriBase'), variables('nginxInstallName'))]",
        "wechatInstallScriptPrefix": "[concat(variables('fileUriBase'), variables('wechatInstallName'))]",
        "h5InstallScriptPrefix": "[concat(variables('fileUriBase'), variables('h5InstallName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('newStorageAccountName')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('availabilitySetName')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {}
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsLabelPrefix')]"
                }
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('wechatOutIPAddressName'), copyindex())]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "ipLoopWeChat",
                "count": "[variables('numberOfWeChatInstances')]"
            },
            "properties": {
                "publicIPAllocationMethod": "[variables('outIPAddressType')]"
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('h5OutIPAddressName'), copyindex())]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "ipLoopH5",
                "count": "[variables('numberOfH5Instances')]"
            },
            "properties": {
                "publicIPAllocationMethod": "[variables('outIPAddressType')]"
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vnetName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetSLBName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetSLBPrefix')]"
                        }
                    },
                    {
                        "name": "[variables('subnetWeChatName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetWeChatPrefix')]"
                        }
                    },
                    {
                        "name": "[variables('subnetH5Name')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetH5Prefix')]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nginxNicNamePrefix'), copyindex())]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "nicLoopNginx",
                "count": "[variables('numberOfNginxInstances')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
                "[concat('Microsoft.Network/loadBalancers/', variables('lbName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfigNginx",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnetSLBRef')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(variables('lbID'), '/backendAddressPools/LoadBalancerBackend')]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[concat(variables('lbID'),'/inboundNatRules/PRDP-VM', copyindex())]"
                                }
                            ]
                        }

                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('wechatNicNamePrefix'), copyindex())]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "nicLoopWeChat",
                "count": "[variables('numberOfWeChatInstances')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
                "[concat('Microsoft.Network/publicIPAddresses/', variables('wechatOutIPAddressName'), copyindex())]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfigWeChat",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[concat('10.0.2.', copyindex(20))]",
                            "subnet": {
                                "id": "[variables('subnetWeChatRef')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('wechatOutIPAddressName'), copyindex()))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('h5NicNamePrefix'), copyindex())]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "nicLoopH5",
                "count": "[variables('numberOfH5Instances')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
                "[concat('Microsoft.Network/publicIPAddresses/', variables('h5OutIPAddressName'), copyindex())]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfigH5",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[concat('10.0.5.', copyindex(20))]",
                            "subnet": {
                                "id": "[variables('subnetH5Ref')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('h5OutIPAddressName'), copyindex()))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "name": "[variables('lbName')]",
            "type": "Microsoft.Network/loadBalancers",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerFrontend",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[variables('publicIPAddressID')]"
                            }
                        },
                        "privateIPAddress": "10.0.1.1",
                        "privateIPAllocationMethod": "Static"
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "LoadBalancerBackend"

                    }
                ],
                "inboundNatRules": [
                    {
                        "name": "PRDP-VM0",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "protocol": "tcp",
                            "frontendPort": 50001,
                            "backendPort": 22,
                            "enableFloatingIP": false
                        }
                    },
                    {
                        "name": "PRDP-VM1",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "protocol": "tcp",
                            "frontendPort": 50002,
                            "backendPort": 22,
                            "enableFloatingIP": false
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "LBRule",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID')]"
                            },
                            "protocol": "tcp",
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "probe": {
                                "id": "[variables('lbProbeID')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "tcpProbe",
                        "properties": {
                            "protocol": "tcp",
                            "port": 80,
                            "intervalInSeconds": "5",
                            "numberOfProbes": "2"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('nginxVmNamePrefix'), copyindex())]",
            "copy": {
                "name": "virtualMachineLoopNginx",
                "count": "[variables('numberOfNginxInstances')]"
            },
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nginxNicNamePrefix'), copyindex())]",
                "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
            ],
            "tags": {
                "Role": "nginx"
            },
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computername": "[concat(parameters('nginxVmNamePrefix'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('nginxOSUBTSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "ngosdisk",
                        "vhd": {
                            "uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.chinacloudapi.cn/vhds/','ngosdisk', copyindex(), '.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nginxNicNamePrefix'),copyindex()))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "true",
                        "storageUri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.chinacloudapi.cn')]"
                    }
                }
            },
            "resources": [
                {
                    "apiVersion": "[variables('apiVersion')]",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(parameters('nginxVmNamePrefix'), copyIndex(),'/LinuxRMCustomScriptExtension')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/',parameters('nginxVmNamePrefix'),copyIndex())]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.OSTCExtensions",
                        "type": "CustomScriptForLinux",
                        "typeHandlerVersion": "1.4",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": [
                                "[concat(variables('nginxInstallScriptPrefix'), '.sh')]"
                            ],
                            "commandToExecute": "[concat('sh ', variables('nginxInstallName'), '.sh', ' ', copyIndex(), ' ', variables('numberOfWeChatInstances'), ' ', variables('numberOfH5Instances'), ' ', '10.0.2.20', ' ', '10.0.5.20')]"
                        }
                    }
                }
            ]
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('wechatVmNamePrefix'), copyindex())]",
            "copy": {
                "name": "virtualMachineLoopWeChat",
                "count": "[variables('numberOfWeChatInstances')]"
            },
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('wechatNicNamePrefix'), copyindex())]",
                "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
            ],
            "tags": {
                "Role": "wechat"
            },
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computername": "[concat(parameters('wechatVmNamePrefix'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('wechatOSUBTSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "wechatosdisk",
                        "vhd": {
                            "uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.chinacloudapi.cn/vhds/','wechatosdisk', copyindex(), '.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('wechatNicNamePrefix'),copyindex()))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "apiVersion": "[variables('apiVersion')]",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(parameters('wechatVmNamePrefix'), copyindex(), '/wechatinstallscript')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/',parameters('wechatVmNamePrefix'),copyindex())]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.OSTCExtensions",
                        "type": "CustomScriptForLinux",
                        "typeHandlerVersion": "1.4",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": [
                                "[concat(variables('wechatInstallScriptPrefix'), '.sh')]"
                            ],
                            "commandToExecute": "[concat('sh ', variables('wechatInstallName'), '.sh')]"
                        }
                    }
                }
            ]
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('h5VmNamePrefix'), copyindex())]",
            "copy": {
                "name": "virtualMachineLoopH5",
                "count": "[variables('numberOfH5Instances')]"
            },
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('h5NicNamePrefix'), copyindex())]",
                "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
            ],
            "tags": {
                "Role": "h5"
            },
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computername": "[concat(parameters('h5VmNamePrefix'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('h5OSUBTSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "h5osdisk",
                        "vhd": {
                            "uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.chinacloudapi.cn/vhds/','h5osdisk', copyindex(), '.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('h5NicNamePrefix'),copyindex()))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "apiVersion": "[variables('apiVersion')]",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(parameters('h5VmNamePrefix'), copyindex(), '/h5installscript')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/',parameters('h5VmNamePrefix'),copyindex())]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.OSTCExtensions",
                        "type": "CustomScriptForLinux",
                        "typeHandlerVersion": "1.4",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": [
                                "[concat(variables('h5InstallScriptPrefix'), '.sh')]"
                            ],
                            "commandToExecute": "[concat('sh ', variables('h5InstallName'), '.sh')]"
                        }
                    }
                }
            ]
        }
    ]
}
{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Admin username"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Admin password"
            }
        },
        "dnsLabelPrefix": {
            "type": "string",
            "metadata": {
                "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
            }
        },
        "nginxVmNamePrefix": {
            "type": "string",
            "defaultValue": "nginxVM",
            "metadata": {
                "description": "Virtual machine name prefix for primary vm instances"
            }
        },
        "wechatVmNamePrefix": {
            "type": "string",
            "defaultValue": "wechatVM",
            "metadata": {
                "description": "Virtual machine name prefix for secondary vm instances"
            }
        },
        "h5VmNamePrefix": {
            "type": "string",
            "defaultValue": "h5VM",
            "metadata": {
                "description": "Virtual machine name prefix for third vm instances"
            }
        },
        "nginxOSUBTSKU": {
            "type": "string",
            "defaultValue": "6.7",
            "allowedValues": [
                "6.7"
            ],
            "metadata": {
                "description": "The CentOS version for the VM. This will pick a origented image of this given ubuntu version. Allowed values: 6.7."
            }
        },
        "wechatOSUBTSKU": {
            "type": "string",
            "defaultValue": "6.7",
            "allowedValues": [
                "6.7"
            ],
            "metadata": {
                "description": "The CentOS version for the VM. This will pick a origented image of this given ubuntu version. Allowed values: 6.7."
            }
        },
        "h5OSUBTSKU": {
            "type": "string",
            "defaultValue": "6.7",
            "allowedValues": [
                "6.7"
            ],
            "metadata": {
                "description": "The CentOS version for the VM. This will pick a origented image of this given ubuntu version. Allowed values: 6.7."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_A1",
            "allowedValues": [
                "Standard_A0",
                "Standard_A1",
                "Standard_A2",
                "Standard_A3",
                "Standard_A4"
            ],
            "metadata": {
                "description": "Virtual machine size"
            }
        }
    },
    "variables": {
        "storageAccountType": "Standard_LRS",
        "vmStorageAccountContainerName": "vhds",
        "availabilitySetName": "webCloudAvSet",
        "addressPrefix": "10.0.0.0/16",
        "subnetSLBName": "Subnet-1",
        "subnetSLBPrefix": "10.0.1.0/24",
        "subnetWeChatName": "Subnet-2",
        "subnetWeChatPrefix": "10.0.2.0/24",
        "subnetH5Name": "Subnet-3",
        "subnetH5Prefix": "10.0.5.0/24",
        "vnetName": "clusterCloudVNET",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetName'))]",
        "subnetSLBRef": "[concat(variables('vnetID'),'/subnets/',variables ('subnetSLBName'))]",
        "subnetWeChatRef": "[concat(variables('vnetID'),'/subnets/',variables ('subnetWeChatName'))]",
        "subnetH5Ref": "[concat(variables('vnetID'),'/subnets/',variables ('subnetH5Name'))]",
        "publicIPAddressType": "Dynamic",
        "outIPAddressType": "Dynamic",
        "publicIPAddressName": "webCloudPublicIP",
        "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
        "wechatOutIPAddressName": "wechatCloudOutIP",
        "wechatOutIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('wechatOutIPAddressName'))]",
        "h5OutIPAddressName": "h5CloudOutIP",
        "h5OutIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('h5OutIPAddressName'))]",
        "lbName": "webCloudLB",
        "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbName'))]",
        "numberOfNginxInstances": 2,
        "numberOfWeChatInstances": 2,
        "numberOfH5Instances": 2,
        "numberOfServerVmInstances": 4,
        "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/loadBalancerFrontend')]",
        "lbPoolID": "[concat(variables('lbID'),'/backendAddressPools/LoadBalancerBackend')]",
        "lbProbeID": "[concat(variables('lbID'),'/probes/tcpProbe')]",
        "newStorageAccountName": "[concat(uniquestring(resourceGroup().id),'storage')]",
        "apiVersion": "2015-06-15",
        "hostDNSNameScriptArgument": "[concat('*.',resourceGroup().location,'.cloudapp.azure.com')]",
        "nginxNicNamePrefix": "nicNginx",
        "wechatNicNamePrefix": "nicWechat",
        "h5NicNamePrefix": "nicH5",
        "imagePublisher": "OpenLogic",
        "imageOffer": "CentOS",
        "fileUriBase": "https://armresstorage.blob.core.chinacloudapi.cn/script/",
        "nginxInstallName": "install-nginx",
        "wechatInstallName": "install-wechat",
        "h5InstallName": "install-h5",
        "nginxInstallScriptPrefix": "[concat(variables('fileUriBase'), variables('nginxInstallName'))]",
        "wechatInstallScriptPrefix": "[concat(variables('fileUriBase'), variables('wechatInstallName'))]",
        "h5InstallScriptPrefix": "[concat(variables('fileUriBase'), variables('h5InstallName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('newStorageAccountName')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('availabilitySetName')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {}
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsLabelPrefix')]"
                }
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('wechatOutIPAddressName'), copyindex())]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "ipLoopWeChat",
                "count": "[variables('numberOfWeChatInstances')]"
            },
            "properties": {
                "publicIPAllocationMethod": "[variables('outIPAddressType')]"
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('h5OutIPAddressName'), copyindex())]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "ipLoopH5",
                "count": "[variables('numberOfH5Instances')]"
            },
            "properties": {
                "publicIPAllocationMethod": "[variables('outIPAddressType')]"
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vnetName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetSLBName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetSLBPrefix')]"
                        }
                    },
                    {
                        "name": "[variables('subnetWeChatName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetWeChatPrefix')]"
                        }
                    },
                    {
                        "name": "[variables('subnetH5Name')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetH5Prefix')]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nginxNicNamePrefix'), copyindex())]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "nicLoopNginx",
                "count": "[variables('numberOfNginxInstances')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
                "[concat('Microsoft.Network/loadBalancers/', variables('lbName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfigNginx",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnetSLBRef')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(variables('lbID'), '/backendAddressPools/LoadBalancerBackend')]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[concat(variables('lbID'),'/inboundNatRules/PRDP-VM', copyindex())]"
                                }
                            ]
                        }

                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('wechatNicNamePrefix'), copyindex())]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "nicLoopWeChat",
                "count": "[variables('numberOfWeChatInstances')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
                "[concat('Microsoft.Network/publicIPAddresses/', variables('wechatOutIPAddressName'), copyindex())]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfigWeChat",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[concat('10.0.2.', copyindex(20))]",
                            "subnet": {
                                "id": "[variables('subnetWeChatRef')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('wechatOutIPAddressName'), copyindex()))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('h5NicNamePrefix'), copyindex())]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "nicLoopH5",
                "count": "[variables('numberOfH5Instances')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
                "[concat('Microsoft.Network/publicIPAddresses/', variables('h5OutIPAddressName'), copyindex())]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfigH5",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[concat('10.0.5.', copyindex(20))]",
                            "subnet": {
                                "id": "[variables('subnetH5Ref')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('h5OutIPAddressName'), copyindex()))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "name": "[variables('lbName')]",
            "type": "Microsoft.Network/loadBalancers",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerFrontend",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[variables('publicIPAddressID')]"
                            }
                        },
                        "privateIPAddress": "10.0.1.1",
                        "privateIPAllocationMethod": "Static"
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "LoadBalancerBackend"

                    }
                ],
                "inboundNatRules": [
                    {
                        "name": "PRDP-VM0",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "protocol": "tcp",
                            "frontendPort": 50001,
                            "backendPort": 22,
                            "enableFloatingIP": false
                        }
                    },
                    {
                        "name": "PRDP-VM1",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "protocol": "tcp",
                            "frontendPort": 50002,
                            "backendPort": 22,
                            "enableFloatingIP": false
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "LBRule",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID')]"
                            },
                            "protocol": "tcp",
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "probe": {
                                "id": "[variables('lbProbeID')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "tcpProbe",
                        "properties": {
                            "protocol": "tcp",
                            "port": 80,
                            "intervalInSeconds": "5",
                            "numberOfProbes": "2"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('nginxVmNamePrefix'), copyindex())]",
            "copy": {
                "name": "virtualMachineLoopNginx",
                "count": "[variables('numberOfNginxInstances')]"
            },
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nginxNicNamePrefix'), copyindex())]",
                "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
            ],
            "tags": {
                "Role": "nginx"
            },
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computername": "[concat(parameters('nginxVmNamePrefix'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('nginxOSUBTSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "ngosdisk",
                        "vhd": {
                            "uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.chinacloudapi.cn/vhds/','ngosdisk', copyindex(), '.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nginxNicNamePrefix'),copyindex()))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "true",
                        "storageUri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.chinacloudapi.cn')]"
                    }
                }
            },
            "resources": [
                {
                    "apiVersion": "[variables('apiVersion')]",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(parameters('nginxVmNamePrefix'), copyIndex(),'/LinuxRMCustomScriptExtension')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/',parameters('nginxVmNamePrefix'),copyIndex())]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.OSTCExtensions",
                        "type": "CustomScriptForLinux",
                        "typeHandlerVersion": "1.4",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": [
                                "[concat(variables('nginxInstallScriptPrefix'), '.sh')]"
                            ],
                            "commandToExecute": "[concat('sh ', variables('nginxInstallName'), '.sh', ' ', copyIndex(), ' ', variables('numberOfWeChatInstances'), ' ', variables('numberOfH5Instances'), ' ', '10.0.2.20', ' ', '10.0.5.20')]"
                        }
                    }
                }
            ]
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('wechatVmNamePrefix'), copyindex())]",
            "copy": {
                "name": "virtualMachineLoopWeChat",
                "count": "[variables('numberOfWeChatInstances')]"
            },
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('wechatNicNamePrefix'), copyindex())]",
                "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
            ],
            "tags": {
                "Role": "wechat"
            },
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computername": "[concat(parameters('wechatVmNamePrefix'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('wechatOSUBTSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "wechatosdisk",
                        "vhd": {
                            "uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.chinacloudapi.cn/vhds/','wechatosdisk', copyindex(), '.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('wechatNicNamePrefix'),copyindex()))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "apiVersion": "[variables('apiVersion')]",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(parameters('wechatVmNamePrefix'), copyindex(), '/wechatinstallscript')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/',parameters('wechatVmNamePrefix'),copyindex())]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.OSTCExtensions",
                        "type": "CustomScriptForLinux",
                        "typeHandlerVersion": "1.4",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": [
                                "[concat(variables('wechatInstallScriptPrefix'), '.sh')]"
                            ],
                            "commandToExecute": "[concat('sh ', variables('wechatInstallName'), '.sh')]"
                        }
                    }
                }
            ]
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('h5VmNamePrefix'), copyindex())]",
            "copy": {
                "name": "virtualMachineLoopH5",
                "count": "[variables('numberOfH5Instances')]"
            },
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('h5NicNamePrefix'), copyindex())]",
                "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
            ],
            "tags": {
                "Role": "h5"
            },
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computername": "[concat(parameters('h5VmNamePrefix'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('h5OSUBTSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "h5osdisk",
                        "vhd": {
                            "uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.chinacloudapi.cn/vhds/','h5osdisk', copyindex(), '.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('h5NicNamePrefix'),copyindex()))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "apiVersion": "[variables('apiVersion')]",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(parameters('h5VmNamePrefix'), copyindex(), '/h5installscript')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/',parameters('h5VmNamePrefix'),copyindex())]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.OSTCExtensions",
                        "type": "CustomScriptForLinux",
                        "typeHandlerVersion": "1.4",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": [
                                "[concat(variables('h5InstallScriptPrefix'), '.sh')]"
                            ],
                            "commandToExecute": "[concat('sh ', variables('h5InstallName'), '.sh')]"
                        }
                    }
                }
            ]
        }
    ]
}
